{"version":3,"sources":["shared/components/UIElements/Card.js","handsome-man-avatar-.jpg","shared/components/UIElements/Avatar.js","User/components/UserItem.js","User/components/UsersList.js","User/pages/User.js"],"names":["Card","props","className","style","children","module","exports","Avatar","src","image","alt","width","height","UserItem","boxShadow","marginRight","marginTop","to","id","process","name","placeCount","UsersList","items","length","type","map","user","key","places","Users","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","useEffect","a","console","log","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner","asOverlay"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,uGCPbC,EAAOC,QAAU,IAA0B,kD,iHCgB5BC,G,kBAZA,SAAAN,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEK,IAAKP,EAAMQ,MACXC,IAAKT,EAAMS,IACXP,MAAO,CAAEQ,MAAOV,EAAMU,MAAOC,OAAQX,EAAMU,Y,eCepCE,EApBE,SAACZ,GACd,OAEI,wBAAIC,UAAU,aACN,kBAACF,EAAA,EAAD,CAAMG,MAAS,CAACW,UAAU,uBAAwBC,YAAY,OAAOC,UAAU,QAASd,UAAY,sBACpG,kBAAC,IAAD,CAAMe,GAAE,WAAQhB,EAAMiB,GAAd,YACR,yBAAKhB,UAAU,oBACf,kBAAC,EAAD,CAAQO,MAAK,UAAOU,yCAAP,OAAyClB,EAAMQ,OAASC,IAAOT,EAAMmB,QAElF,yBAAKlB,UAAU,mBACX,4BAAKD,EAAMmB,MACX,4BAAKnB,EAAMoB,WACc,IAArBpB,EAAMoB,WAAiB,SAAS,gBCQzCC,EApBG,SAACrB,GACf,OAA0B,IAAvBA,EAAMsB,MAAMC,OAGP,yBAAKtB,UAAU,UAChB,kBAACF,EAAA,EAAD,KAAM,gDAKN,wBAAKyB,KAAO,OAAOvB,UAAY,UACjCD,EAAMsB,MAAMG,KAAI,SAAAC,GACb,OAAO,kBAAC,EAAD,CAAUzB,UAAW,WAAW0B,IAAOD,EAAKT,GAAIA,GAAMS,EAAKT,GAAIT,MACpEkB,EAAKlB,MAAOW,KAAQO,EAAKP,KAC1BC,WAAcM,EAAKE,OAAOL,c,sCC8BxBM,UAzCD,WACV,MAAiDC,cAA1CC,EAAP,EAAOA,UAAUC,EAAjB,EAAiBA,MAAMC,EAAvB,EAAuBA,YAAYC,EAAnC,EAAmCA,WACnC,EAAqCC,qBAArC,mBAAOC,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,YAEU,uCAAG,4BAAAC,EAAA,6DACfC,QAAQC,IAAIvB,kDADG,kBAIoBe,EAAYf,kDAJhC,OAIDwB,EAJC,OAKPF,QAAQC,IAAIvB,kDACZmB,EAAeK,EAAaC,OANrB,yGAAH,qDAefC,KAEE,CAACX,IAMR,OACA,kBAAC,IAAMY,SAAP,KAEA,kBAACC,EAAA,EAAD,CAAYd,MAASA,EAAOe,QANP,WACjBb,OAMFH,GAAa,yBAAK9B,UAAU,UAAS,kBAAC+C,EAAA,EAAD,CAAgBC,WAAS,MAC/DlB,GAAaK,GAAe,kBAAC,EAAD,CAAWd,MAAQc","file":"static/js/7.a4d04494.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","module.exports = __webpack_public_path__ + \"static/media/handsome-man-avatar-.496b0e2b.jpg\";","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from \"react\";\r\nimport \"./UserItem.css\"\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\";\r\nimport {Link} from 'react-router-dom'\r\nimport Card from '../../shared/components/UIElements/Card'\r\nconst UserItem = (props)=>{\r\n    return(\r\n        \r\n        <li className=\"user-item\">\r\n                <Card style = {{boxShadow:'2px 2px 2px  #ffa600', marginRight:\"auto\",marginTop:\"20px\"}} className = \"user-item__content\">\r\n                <Link to = {`/${props.id}/places`}>\r\n                <div className=\"user-item__image\">\r\n                <Avatar image = {`${process.env.REACT_APP_ASSET_URL}${props.image}`} alt = {props.name}></Avatar>\r\n                </div>\r\n                <div className=\"user-item__info\">\r\n                    <h2>{props.name}</h2>\r\n                    <h3>{props.placeCount}{\r\n                        props.placeCount === 1?' Place':\" Places\"\r\n                    }</h3>\r\n                </div>\r\n                </Link>\r\n             </Card>\r\n        </li>\r\n    )\r\n}\r\nexport default UserItem","import React from \"react\";\r\nimport \"./UsersList.css\"\r\nimport UserItem from \"./UserItem\";\r\nimport \"./UserItem.css\"\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nconst UsersList = (props)=>{\r\n    if(props.items.length === 0)\r\n    {\r\n        return(\r\n            <div className=\"center\">\r\n           <Card><h2>no Users Found</h2></Card>\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n    return <ul  type = \"none\" className = \"center\">\r\n        {props.items.map(user =>{\r\n            return <UserItem className= \"userItem\" key = {user.id} id = {user.id} image =\r\n             {user.image} name = {user.name}\r\n             placeCount = {user.places.length}\r\n             ></UserItem>\r\n        })}\r\n    </ul>\r\n    }\r\n}\r\nexport default UsersList","import React , {useEffect, useState}from \"react\";\r\nimport UsersList from \"../components/UsersList\";\r\nimport image from \"../../handsome-man-avatar-.jpg\"\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport \"./User.css\"\r\nconst Users = ()=>{\r\n    const {isLoading,error,sendRequest,clearError} = useHttpClient();\r\n    const [loadedUsers,setLoadedUsers] = useState();\r\n\r\n    useEffect(()=>{\r\n       \r\n        const fetchUsers = async ()=>{\r\n            console.log(process.env.REACT_APP_BACKEND_URL+\"/users\")\r\n            try{ \r\n                    \r\n                    const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL+\"/users\")\r\n                    console.log(process.env.REACT_APP_BACKEND_URL+\"/users\")\r\n                    setLoadedUsers(responseData.users)\r\n                    }\r\n                    catch(err)\r\n                    {\r\n                    \r\n    \r\n                    }\r\n                    \r\n        }\r\n         fetchUsers()\r\n    \r\n        }, [sendRequest])\r\n        \r\n        \r\n    const errorHandler = ()=>{\r\n        clearError();\r\n    }\r\n    return  (\r\n    <React.Fragment>\r\n    \r\n    <ErrorModal error = {error} onClear = {errorHandler}></ErrorModal>\r\n    { isLoading && <div className=\"center\"><LoadingSpinner asOverlay ></LoadingSpinner></div>}\r\n   {!isLoading && loadedUsers && <UsersList items ={loadedUsers}>\r\n  \r\n\r\n    </UsersList> }\r\n    </React.Fragment>\r\n    )\r\n}\r\nexport default Users"],"sourceRoot":""}