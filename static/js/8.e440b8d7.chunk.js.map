{"version":3,"sources":["shared/components/UIElements/Card.js","shared/components/UIElements/Map.js","Places/components/PlaceItem.js","Places/components/PlaceList.js","Places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","window","ol","target","current","id","layers","layer","Tile","source","OSM","view","View","proj","fromLonLat","lng","lat","ref","PlaceItem","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","a","process","Authorization","token","onDelete","console","log","coordinates","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","type","map","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","getPlaces","deletedPlaceId","prevplaces","filter"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,mPC2BEC,G,MA9BH,SAAAJ,GACV,IAAMK,EAASC,mBAEPC,EAAiBP,EAAjBO,OAAQC,EAASR,EAATQ,KAiBhB,OAfAC,qBAAU,WACR,IAAIC,OAAOC,GAAGP,IAAI,CAChBQ,OAAQP,EAAOQ,QAAQC,GACvBC,OAAQ,CACN,IAAIL,OAAOC,GAAGK,MAAMC,KAAK,CACvBC,OAAQ,IAAIR,OAAOC,GAAGO,OAAOC,OAGjCC,KAAM,IAAIV,OAAOC,GAAGU,KAAK,CACvBd,OAAQG,OAAOC,GAAGW,KAAKC,WAAW,CAAChB,EAAOiB,IAAKjB,EAAOkB,MACtDjB,KAAMA,QAGT,CAACD,EAAQC,IAGV,yBACEkB,IAAKrB,EACLJ,UAAS,cAASD,EAAMC,WACxBC,MAAOF,EAAME,MACbY,GAAG,U,gCC4FMa,EA9GG,SAAC3B,GACf,IAAM4B,EAAOC,qBAAWC,KACxB,EAAiDC,cAA1CC,EAAP,EAAOA,UAAUC,EAAjB,EAAiBA,MAAMC,EAAvB,EAAuBA,YAAYC,EAAnC,EAAmCA,WACnC,EAA6BC,oBAAS,GAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA+CF,oBAAS,GAAxD,mBAAOG,EAAP,KAAwBC,EAAxB,KAIMC,EAAkB,WACpBH,GAAW,IAKTI,EAAsB,WACxBF,GAAoB,IAElBG,EAAoB,uCAAG,sBAAAC,EAAA,6DACzBJ,GAAoB,GADK,kBAGEN,EAAY,GAAD,OAC3BW,0CAD2B,mBACiB7C,EAAMc,IACrD,SACA,KACA,CACEgC,cAAe,UAAYlB,EAAKmB,QARjB,cAWrB/C,EAAMgD,SAAShD,EAAMc,IAXA,yGAAH,qDAqB1B,OADAmC,QAAQC,IAAIlD,EAAMmD,aAEd,kBAAC,IAAMC,SAAP,KACF,kBAACC,EAAA,EAAD,CAAYpB,MAAOA,EAAOqB,QAASnB,IACnC,kBAACoB,EAAA,EAAD,CACEC,KAAMnB,EACNoB,SAAUhB,EACViB,OAAQ1D,EAAM2D,QACdC,aAAa,4BACbC,YAAY,4BACZC,OAAQ,kBAACC,EAAA,EAAD,CAAQC,QAASvB,GAAjB,UAER,yBAAKxC,UAAU,iBACb,kBAAC,EAAD,CAAKM,OAAQP,EAAMmD,YAAa3C,KAAM,OAG1C,kBAAC+C,EAAA,EAAD,CACEC,KAAMjB,EACNkB,SAAUf,EACVgB,OAAO,gBACPG,YAAY,4BACZC,OACE,kBAAC,IAAMV,SAAP,KACE,kBAACW,EAAA,EAAD,CAAQE,SAAO,EAACD,QAAStB,GAAzB,UAGA,kBAACqB,EAAA,EAAD,CAAQG,QAAM,EAACF,QAASrB,GAAxB,YAMJ,6HAKF,wBAAI1C,UAAU,cACZ,kBAACF,EAAA,EAAD,CAAME,UAAU,uBACb+B,GAAa,kBAACmC,EAAA,EAAD,CAAgBC,WAAS,IACvC,yBAAKnE,UAAU,qBACb,yBACEoE,IAAG,UAAKxB,wCAAL,OAAuC7C,EAAMsE,OAChDC,IAAKvE,EAAMwE,SAGf,yBAAKvE,UAAU,oBACb,4BAAKD,EAAMwE,OACX,4BAAKxE,EAAM2D,SACX,2BAAI3D,EAAMyE,cAEZ,yBAAKxE,UAAU,uBACb,kBAAC8D,EAAA,EAAD,CAAQE,SAAO,EAACD,QApFD,WACnB1B,GAAW,KAmFP,eAGCV,EAAK8C,SAAW1E,EAAM2E,WACrB,kBAACZ,EAAA,EAAD,CAAQa,GAAE,kBAAa5E,EAAMc,KAA7B,QAGDc,EAAK8C,SAAW1E,EAAM2E,WACrB,kBAACZ,EAAA,EAAD,CAAQG,QAAM,EAACF,QAtFQ,WAC7BxB,GAAoB,KAqFd,eCvECqC,EAhCG,SAAC7E,GACf,OAAyB,GAAtBA,EAAM8E,MAAMC,OAEJ,yBAAK9E,UAAU,qBAClB,kBAACF,EAAA,EAAD,KACA,iFACA,kBAACgE,EAAA,EAAD,CAAQa,GAAK,cAAb,iBAID,wBAAII,KAAO,OAAO/E,UAAU,cAC9BD,EAAM8E,MAAMG,KAAK,SAAAC,GACd,OAAO,kBAAC,EAAD,CACPC,IAAOD,EAAMpE,GACbA,GAAMoE,EAAMpE,GACZwD,MAASY,EAAMZ,MACfE,MAASU,EAAMV,MACfC,YAAeS,EAAMT,YACrBd,QAAWuB,EAAMvB,QACjBgB,UAAaO,EAAME,QACnBjC,YAAe+B,EAAMG,SACrBrC,SAAYhD,EAAMsF,qB,OCoBfC,UAvCI,WACf,MAAuCnD,qBAAvC,mBAAOoD,EAAP,KAAoBC,EAApB,KACA,EAAiD1D,cAA1CC,EAAP,EAAOA,UAAUC,EAAjB,EAAiBA,MAAMC,EAAvB,EAAuBA,YAAYC,EAAnC,EAAmCA,WAC7BuC,EAASgB,cAAYhB,OAC3BjE,qBAAU,YACS,uCAAG,4BAAAmC,EAAA,+EAEiBV,EAAY,GAAD,OAC/BW,0CAD+B,wBACkB6B,IAH9C,OAEJiB,EAFI,OAKVF,EAAgBE,EAAaC,QALnB,uGAAH,qDAYfC,KAEJ,CAAC3D,EAAYwC,IAMb,OAAQ,kBAAC,IAAMtB,SAAP,KACR,kBAACC,EAAA,EAAD,CAAYpB,MAASA,EAAOqB,QAAWnB,IACtCH,GACG,yBAAK/B,UAAU,UACX,kBAACkE,EAAA,EAAD,CAAgBC,WAAS,MAI/BpC,GAAawD,GAAmB,kBAAC,EAAD,CAAWV,MAASU,EAAcF,cAbxC,SAACQ,GACzBL,GAAgB,SAAAM,GAAU,OAAGA,EAAWC,QAAO,SAAAd,GAAK,OAAGA,EAAMpE,KAAMgF","file":"static/js/8.e440b8d7.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useRef, useEffect } from 'react';\r\n\r\nimport './Map.css';\r\n\r\nconst Map = props => {\r\n  const mapRef = useRef();\r\n  \r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    new window.ol.Map({\r\n      target: mapRef.current.id,\r\n      layers: [\r\n        new window.ol.layer.Tile({\r\n          source: new window.ol.source.OSM()\r\n        })\r\n      ],\r\n      view: new window.ol.View({\r\n        center: window.ol.proj.fromLonLat([center.lng, center.lat]),\r\n        zoom: zoom\r\n      })\r\n    });\r\n  }, [center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      ref={mapRef}\r\n      className={`map ${props.className}`}\r\n      style={props.style}\r\n      id=\"map\"\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default Map;","import React, {useState} from \"react\";\r\nimport \"./PlaceItem.css\"\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Button from \"../../shared/components/formElements/Button\"\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { useContext } from \"react\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nconst PlaceItem = (props)=>{\r\n    const auth = useContext(AuthContext)\r\n    const {isLoading,error,sendRequest,clearError} = useHttpClient();\r\n    const [showMap,setShowMap] = useState(false);\r\n    const [showConfirmModal,setShowConfirmModal] = useState(false);\r\n    const openMapHandler = ()=>{\r\n        setShowMap(true)\r\n    }\r\n    const closeMapHandler = ()=>{\r\n        setShowMap(false)\r\n    }\r\n    const showDeleteWarningHandler = ()=>{\r\n        setShowConfirmModal(true)\r\n    }\r\n    const cancelDeleteHandler = ()=>{\r\n        setShowConfirmModal(false)\r\n    }\r\n    const confirmDeleteHandler = async ()=>{\r\n        setShowConfirmModal(false);\r\n        try{\r\n            const response = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`,\r\n                'DELETE',\r\n                null,\r\n                {\r\n                  Authorization: 'Bearer ' + auth.token\r\n                })\r\n\r\n            props.onDelete(props.id);\r\n        }\r\n\r\n        catch(err)\r\n        {\r\n\r\n        }\r\n    }\r\n\r\n    console.log(props.coordinates)\r\n    return (\r\n        <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={props.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map center={props.coordinates} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? Please note that it\r\n          can't be undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className=\"place-item__content\">\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}${props.image}`}\r\n              alt={props.title}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{props.title}</h2>\r\n            <h3>{props.address}</h3>\r\n            <p>{props.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {auth.userId === props.creatorId && (\r\n              <Button to={`/places/${props.id}`}>EDIT</Button>\r\n            )}\r\n\r\n            {auth.userId === props.creatorId && (\r\n              <Button danger onClick={showDeleteWarningHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n    )\r\n\r\n\r\n\r\n}\r\nexport default PlaceItem","import React from \"react\";\r\nimport \"./PlaceList.css\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../shared/components/formElements/Button\";\r\nconst PlaceList = (props)=>{\r\n    if(props.items.length == 0)\r\n    {\r\n        return <div className=\"place-list center\">\r\n            <Card>\r\n            <h2>No Places Found . Click Share place to add Places</h2>\r\n            <Button to = \"places/new\">Share Place</Button>\r\n            </Card>\r\n        </div>\r\n    }\r\n    return <ul type = \"none\" className=\"place-list\">\r\n        {props.items.map (place =>{\r\n            return <PlaceItem\r\n            key = {place.id}\r\n            id = {place.id}\r\n            image = {place.image}\r\n            title = {place.title}\r\n            description = {place.description}\r\n            address = {place.address}\r\n            creatorId = {place.creator}\r\n            coordinates = {place.location}\r\n            onDelete = {props.onDeletePlace}\r\n            >\r\n\r\n\r\n\r\n            </PlaceItem>\r\n\r\n        })}\r\n    </ul>\r\n\r\n}\r\nexport default PlaceList","import React, { useEffect, useState } from \"react\";\r\nimport './PlaceForm.css'\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport {useParams} from 'react-router-dom'\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nconst UserPlaces = ()=>{\r\n    const [loadedPlaces,setLoadedPlaces] = useState();\r\n    const {isLoading,error,sendRequest,clearError} = useHttpClient();\r\n    const userId = useParams().userId;\r\n    useEffect(()=>{\r\n        const getPlaces = async ()=>{\r\n            try{\r\n                const responseData = await sendRequest(\r\n                    `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n                );\r\n                setLoadedPlaces(responseData.places)\r\n            }\r\n            catch(err)\r\n            {\r\n\r\n            }\r\n        }\r\n        getPlaces();\r\n    },\r\n    [sendRequest,userId])\r\n    const placeDeletedHanlder = (deletedPlaceId)=>{\r\n        setLoadedPlaces(prevplaces=> prevplaces.filter(place=> place.id!== deletedPlaceId))\r\n    }\r\n\r\n\r\n    return  <React.Fragment>\r\n    <ErrorModal error = {error} onClear = {clearError}></ErrorModal>\r\n    {isLoading && (\r\n        <div className=\"center\">\r\n            <LoadingSpinner asOverlay></LoadingSpinner>\r\n        </div>\r\n    )}\r\n    \r\n    {!isLoading && loadedPlaces &&    <PlaceList items = {loadedPlaces} onDeletePlace = {placeDeletedHanlder}></PlaceList>}\r\n    \r\n    </React.Fragment>\r\n\r\n\r\n}\r\nexport default UserPlaces"],"sourceRoot":""}