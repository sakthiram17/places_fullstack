{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","shared/components/Util/Validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/components/formElements/Input.js","shared/hooks/form-hook.js","shared/components/formElements/ImageUpload.js","Places/pages/NewPlaces.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","_defineProperty","obj","configurable","writable","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initalValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","NewPlace","Auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inputHandler","history","useHistory","placeSubmitHandler","a","preventDefault","formData","FormData","append","userId","process","Authorization","token","Fragment","onClear","onSubmit","asOverlay","disabled"],"mappings":"qGAAA,8CAEA,SAASA,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GACvCC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eAEtDP,EAAKQ,KAAKC,MAAMT,EAAMG,GAGxB,OAAOH,EAGM,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNf,EAAQI,OAAOc,IAAS,GAAMC,SAAQ,SAAUC,GAC9C,YAAeN,EAAQM,EAAKF,EAAOE,OAE5BhB,OAAOiB,0BAChBjB,OAAOkB,iBAAiBR,EAAQV,OAAOiB,0BAA0BH,IAEjElB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GACxChB,OAAOmB,eAAeT,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,OAKjF,OAAON,I,oLCjCT,IAQaU,EAAoB,iBAAO,CAAEC,KARX,YAUlBC,EAAsB,SAAAC,GAAG,MAAK,CACzCF,KAV+B,YAW/BE,IAAKA,IAQMC,EAAkB,iBAAO,CAAEH,KAfX,UAiBhBI,EAAW,SAACC,EAAOC,GAC9B,IAD6C,EACzCC,GAAU,EAD+B,ECrBhC,SAAoCC,GACjD,GAAsB,qBAAXC,QAAgD,MAAtBD,EAAEC,OAAOC,UAAmB,CAC/D,GAAIC,MAAMC,QAAQJ,KAAOA,EAAI,OAAAK,EAAA,GAA2BL,IAAK,CAC3D,IAAIlB,EAAI,EAEJwB,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAI1B,GAAKkB,EAAEhB,OAAe,CACxByB,MAAM,GAED,CACLA,MAAM,EACNZ,MAAOG,EAAElB,OAGb4B,EAAG,SAAWC,GACZ,MAAMA,GAERC,EAAGN,GAIP,MAAM,IAAIO,UAAU,yIAGtB,IAAIC,EAGAC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLV,EAAG,WACDO,EAAKd,EAAEC,OAAOC,aAEhBM,EAAG,WACD,IAAIU,EAAOJ,EAAGK,OAEd,OADAH,EAAmBE,EAAKT,KACjBS,GAETR,EAAG,SAAWU,GACZH,GAAS,EACTF,EAAMK,GAERR,EAAG,WACD,IACOI,GAAoC,MAAhBF,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIG,EAAQ,MAAMF,KD5BqB,CAErBjB,GAFqB,IAE7C,2BAAoC,CAAC,IAA1BuB,EAAyB,QAxBP,YAyBvBA,EAAU7B,OACZO,EAAUA,GAAWF,EAAMyB,OAAOtC,OAAS,GAzBhB,cA2BzBqC,EAAU7B,OACZO,EAAUA,GAAWF,EAAMyB,OAAOtC,QAAUqC,EAAU3B,KA3B3B,cA6BzB2B,EAAU7B,OACZO,EAAUA,GAAWF,EAAMyB,OAAOtC,QAAUqC,EAAU3B,KA7BjC,QA+BnB2B,EAAU7B,OACZO,EAAUA,IAAYF,GAASwB,EAAU3B,KA/BpB,QAiCnB2B,EAAU7B,OACZO,EAAUA,IAAYF,GAASwB,EAAU3B,KAjClB,UAmCrB2B,EAAU7B,OACZO,EAAUA,GAAW,iBAAiBwB,KAAK1B,KAnBF,8BAsB7C,OAAOE,I,gCE5CM,SAASyB,EAAgBC,EAAKtC,EAAKU,GAYhD,OAXIV,KAAOsC,EACTtD,OAAOmB,eAAemC,EAAKtC,EAAK,CAC9BU,MAAOA,EACPpB,YAAY,EACZiD,cAAc,EACdC,UAAU,IAGZF,EAAItC,GAAOU,EAGN4B,EAZT,mC,4ECIMG,G,MAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOtC,MACb,IAAK,SACH,OAAO,2BACFqC,GADL,IAEEhC,MAAOiC,EAAOpC,IACdK,QAASH,YAASkC,EAAOpC,IAAKoC,EAAOhC,cAEzC,IAAK,QACH,OAAO,2BACF+B,GADL,IAEEE,WAAW,IAGf,QACE,OAAOF,KAgEEG,IA5DD,SAAAC,GACZ,MAA+BC,qBAAWN,EAAc,CACtD/B,MAAOoC,EAAME,cAAe,GAC5BJ,WAAW,EACXhC,QAASkC,EAAMG,cAAe,IAHhC,mBAAOC,EAAP,KAAmBC,EAAnB,KAMQC,EAAgBN,EAAhBM,GAAIC,EAAYP,EAAZO,QACJ3C,EAAmBwC,EAAnBxC,MAAOE,EAAYsC,EAAZtC,QAEf0C,qBAAU,WACRD,EAAQD,EAAI1C,EAAOE,KAClB,CAACwC,EAAI1C,EAAOE,EAASyC,IAExB,IAAME,EAAgB,SAAAC,GACpBL,EAAS,CACP9C,KAAM,SACNE,IAAKiD,EAAM9D,OAAOgB,MAClBC,WAAYmC,EAAMnC,cAIhB8C,EAAe,WACnBN,EAAS,CACP9C,KAAM,WAIJqD,EACc,UAAlBZ,EAAMY,QACJ,2BACEN,GAAIN,EAAMM,GACV/C,KAAMyC,EAAMzC,KACZsD,YAAab,EAAMa,YACnBC,SAAUL,EACVM,OAAQJ,EACR/C,MAAOwC,EAAWxC,QAGpB,8BACE0C,GAAIN,EAAMM,GACVU,KAAMhB,EAAMgB,MAAQ,EACpBF,SAAUL,EACVM,OAAQJ,EACR/C,MAAOwC,EAAWxC,QAIxB,OACE,yBACEqD,UAAS,wBAAmBb,EAAWtC,SAAWsC,EAAWN,WAC3D,0BAEF,2BAAOoB,QAASlB,EAAMM,IAAKN,EAAMmB,OAChCP,GACCR,EAAWtC,SAAWsC,EAAWN,WAAa,2BAAIE,EAAMoB,c,+IC5E1DC,EAAc,SAACzB,EAAOC,GAC1B,OAAQA,EAAOtC,MACb,IAAK,eACH,IAAI+D,GAAc,EAClB,IAAK,IAAMC,KAAW3B,EAAM4B,OACrB5B,EAAM4B,OAAOD,KAIhBD,EADEC,IAAY1B,EAAO0B,QACPD,GAAezB,EAAO/B,QAEtBwD,GAAe1B,EAAM4B,OAAOD,GAASzD,SAGvD,OAAO,2BACF8B,GADL,IAEE4B,OAAO,2BACF5B,EAAM4B,QADL,kBAEH3B,EAAO0B,QAAU,CAAE3D,MAAOiC,EAAOjC,MAAOE,QAAS+B,EAAO/B,WAE3DA,QAASwD,IAEb,IAAK,WACH,MAAO,CACLE,OAAQ3B,EAAO2B,OACf1D,QAAS+B,EAAOyB,aAEpB,QACE,OAAO1B,IAIA6B,EAAU,SAACC,EAAeC,GACrC,MAA8B1B,qBAAWoB,EAAa,CACpDG,OAAQE,EACR5D,QAAS6D,IAFX,mBAAOC,EAAP,KAAkBvB,EAAlB,KAsBA,MAAO,CAACuB,EAjBaC,uBAAY,SAACvB,EAAI1C,EAAOE,GAC3CuC,EAAS,CACP9C,KAAM,eACNK,MAAOA,EACPE,QAASA,EACTyD,QAASjB,MAEV,IAEiBuB,uBAAY,SAACC,EAAWC,GAC1C1B,EAAS,CACP9C,KAAM,WACNiE,OAAQM,EACRR,YAAaS,MAEd,O,4ECWYC,IA9DG,SAAAhC,GAChB,MAAwBiC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,qBAApC,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOnE,EAAP,KAAgBwE,EAAhB,KAEMC,EAAgBC,mBAEtBhC,qBAAU,WACR,GAAK0B,EAAL,CAGA,IAAMO,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAClBN,EAAcI,EAAWG,SAE3BH,EAAWI,cAAcX,MACxB,CAACA,IAqBJ,OACE,yBAAKjB,UAAU,gBACb,2BACEX,GAAIN,EAAMM,GACVW,UAAY,WACZ6B,IAAKP,EACLQ,MAAO,CAAEC,QAAS,QAClBzF,KAAK,OACL0F,OAAO,kBACPnC,SA5BgB,SAAAJ,GACpB,IAAIwC,EACAC,EAAcrF,EACd4C,EAAM9D,OAAOwG,OAAuC,IAA9B1C,EAAM9D,OAAOwG,MAAMrG,QAC3CmG,EAAaxC,EAAM9D,OAAOwG,MAAM,GAChCjB,EAAQe,GACRZ,GAAW,GACXa,GAAc,IAEdb,GAAW,GACXa,GAAc,GAEhBnD,EAAMO,QAAQP,EAAMM,GAAI4C,EAAYC,MAkBlC,yBAAKlC,UAAS,uBAAkBjB,EAAMqD,QAAU,WAC9C,yBAAKpC,UAAU,yBACZmB,GAAc,yBAAKkB,IAAKlB,EAAYmB,IAAI,aACvCnB,GAAc,qDAElB,kBAAC,IAAD,CAAQ7E,KAAK,SAASiG,QApBH,WACvBjB,EAAckB,QAAQC,UAmBlB,gBAIA5F,GAAW,2BAAIkC,EAAMoB,c,sNC6DhBuC,UAnFE,WACd,IAAMC,EAAOC,qBAAWC,KACxB,EAAiDC,cAA1CC,EAAP,EAAOA,UAAUC,EAAjB,EAAiBA,MAAMC,EAAvB,EAAuBA,YAAYC,EAAnC,EAAmCA,WACnC,EAAiC1C,YAAQ,CACpC2C,MAAO,CACPxG,MAAO,GACPE,SAAS,GAEXuG,YAAa,CACXzG,MAAO,GACPE,SAAS,GAEXwG,QAAW,CACT1G,MAAO,GACPE,SAAS,GAEXyG,MAAM,CACJ3G,MAAM,KACNE,SAAQ,KAEV,GAjBH,mBAAO8D,EAAP,KAAiB4C,EAAjB,KAoBKC,EAAUC,cACVC,EAAkB,uCAAG,WAAOjE,GAAP,eAAAkE,EAAA,6DAEnBlE,EAAMmE,iBAFa,UAKXC,EAAW,IAAIC,UACZC,OAAO,QAAQpD,EAAUJ,OAAO4C,MAAMxG,OAC/CkH,EAASE,OAAO,cAAcpD,EAAUJ,OAAO6C,YAAYzG,OAC3DkH,EAASE,OAAO,UAAUpD,EAAUJ,OAAO8C,QAAQ1G,OACnDkH,EAASE,OAAO,UAAUpB,EAAKqB,QAC/BH,EAASE,OAAO,QAAQpD,EAAUJ,OAAO+C,MAAM3G,OAV9B,UAcbsG,EAAYgB,iDAClB,OACAJ,EAAS,CACPK,cAAgB,UAAWvB,EAAKwB,QAjBf,QAoBrBX,EAAQhI,KAAK,KApBQ,4GAAH,sDA4B1B,OACE,kBAAC,IAAM4I,SAAP,KACE,kBAAC,IAAD,CAAYpB,MAASA,EAAOqB,QAAWnB,IACvC,0BAAMlD,UAAU,aAAasE,SAAUZ,GACpCX,GAAa,kBAAC,IAAD,CAAgBwB,WAAS,IACzC,kBAAC,IAAD,CAAOlF,GAAK,QAAQ/C,KAAO,OAAO4D,MAAQ,QAAQtD,WAAc,CAACP,eACjEsD,QAAU,QAASQ,UAAY,6BAC/Bb,QAAWiE,IAET,kBAAC,IAAD,CAAOjH,KAAO,OAAO4D,MAAQ,cAActD,WAAc,CAACL,YAAoB,IAChFoD,QAAU,WAAYQ,UAAY,qCAClCd,GAAK,cACLC,QAAWiE,IAEX,kBAAC,IAAD,CACAjH,KAAO,OACP4D,MAAQ,UACRtD,WAAc,CAACP,eACfsD,QAAU,QACVQ,UAAY,+BACZd,GAAK,UACLC,QAAWiE,IAEX,kBAAC,IAAD,CAAalE,GAAK,QAClBC,QAAWiE,EACXpD,UAAY,uBACZ,kBAAC,IAAD,CAAQ7D,KAAO,SAASkI,UAAa7D,EAAU9D,SAA/C","file":"static/js/5.d53e0c57.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { useReducer, useEffect } from 'react';\r\nimport { validate } from '../Util/Validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue ||'',\r\n    isTouched: false,\r\n    isValid: props.initalValid || true\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};","import React ,{useRef,useState,useEffect}from \"react\";\r\nimport \"./ImageUpload.css\"\r\nimport Button from \"./Button\";\r\n\r\nconst ImageUpload = props => {\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState(false);\r\n  \r\n    const filePickerRef = useRef();\r\n  \r\n    useEffect(() => {\r\n      if (!file) {\r\n        return;\r\n      }\r\n      const fileReader = new FileReader();\r\n      fileReader.onload = () => {\r\n        setPreviewUrl(fileReader.result);\r\n      };\r\n      fileReader.readAsDataURL(file);\r\n    }, [file]);\r\n  \r\n    const pickedHandler = event => {\r\n      let pickedFile;\r\n      let fileIsValid = isValid;\r\n      if (event.target.files && event.target.files.length === 1) {\r\n        pickedFile = event.target.files[0];\r\n        setFile(pickedFile);\r\n        setIsValid(true);\r\n        fileIsValid = true;\r\n      } else {\r\n        setIsValid(false);\r\n        fileIsValid = false;\r\n      }\r\n      props.onInput(props.id, pickedFile, fileIsValid);\r\n    };\r\n  \r\n    const pickImageHandler = () => {\r\n      filePickerRef.current.click();\r\n    };\r\n  \r\n    return (\r\n      <div className=\"form-control\">\r\n        <input\r\n          id={props.id}\r\n          className = \"TheImage\"\r\n          ref={filePickerRef}\r\n          style={{ display: 'none' }}\r\n          type=\"file\"\r\n          accept=\".jpg,.png,.jpeg\"\r\n          onChange={pickedHandler}\r\n        />\r\n        <div className={`image-upload ${props.center && 'center'}`}>\r\n          <div className=\"image-upload__preview\">\r\n            {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n            {!previewUrl && <p>Please pick an image.</p>}\r\n          </div>\r\n          <Button type=\"button\" onClick={pickImageHandler}>\r\n            PICK IMAGE\r\n          </Button>\r\n        </div>\r\n        {!isValid && <p>{props.errorText}</p>}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default ImageUpload;\r\n  ","import React , {useCallback} from \"react\";\r\nimport Input from \"../../shared/components/formElements/Input\";\r\nimport \"./PlaceForm.css\"\r\nimport { VALIDATOR_REQUIRE } from \"../../shared/components/Util/Validators\";\r\nimport { VALIDATOR_MINLENGTH } from \"../../shared/components/Util/Validators\";\r\nimport { useReducer } from \"react\"\r\nimport Button from \"../../shared/components/formElements/Button\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport { useContext } from \"react\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ImageUpload from \"../../shared/components/formElements/ImageUpload\";\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'INPUT_CHANGE':\r\n        let formIsValid = true;\r\n        for (const inputId in state.inputs) {\r\n          if (inputId === action.inputId) {\r\n            formIsValid = formIsValid && action.isValid;\r\n          } else {\r\n            formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n          }\r\n        }\r\n        return {\r\n          ...state,\r\n          inputs: {\r\n            ...state.inputs,\r\n            [action.inputId]: { value: action.value, isValid: action.isValid }\r\n          },\r\n          isValid: formIsValid\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nconst NewPlace = ()=>{\r\n   const Auth = useContext(AuthContext);\r\n   const {isLoading,error,sendRequest,clearError} = useHttpClient();\r\n   const [formState,inputHandler] = useForm({\r\n        title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      address  : {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      image:{\r\n        value:null,\r\n        isValid:false\r\n      }\r\n    },false)\r\n   \r\n    \r\n  const history = useHistory();\r\n  const placeSubmitHandler = async (event)=>{\r\n        \r\n          event.preventDefault()\r\n          try\r\n          {\r\n            const formData = new FormData();\r\n            formData.append('title',formState.inputs.title.value)\r\n            formData.append('description',formState.inputs.description.value)\r\n            formData.append('address',formState.inputs.address.value)\r\n            formData.append('creator',Auth.userId)\r\n            formData.append('image',formState.inputs.image.value)\r\n\r\n\r\n\r\n          await sendRequest(process.env.REACT_APP_BACKEND_URL+\"/places\",\r\n          'POST',\r\n          formData,{\r\n            Authorization : 'Bearer '+ Auth.token\r\n          }\r\n           )\r\n        history.push('/')\r\n        }\r\n          catch(err)\r\n          {\r\n\r\n          }\r\n      }\r\n  \r\nreturn(\r\n  <React.Fragment>\r\n    <ErrorModal error = {error} onClear = {clearError}></ErrorModal>\r\n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n      {isLoading && <LoadingSpinner asOverlay></LoadingSpinner>}\r\n    <Input id = \"title\" type = \"text\" label = \"Title\" validators = {[VALIDATOR_REQUIRE()]}\r\n    element = \"input\"  errorText = \"Please enter a valid Title\"\r\n    onInput = {inputHandler}\r\n    ></Input>\r\n      <Input type = \"text\" label = \"Description\" validators = {[VALIDATOR_MINLENGTH(5)]}\r\n    element = \"textarea\"  errorText = \"Please enter at least 5 characters\"\r\n    id = \"description\"\r\n    onInput = {inputHandler}\r\n    ></Input>\r\n    <Input \r\n    type = \"text\" \r\n    label = \"Address\" \r\n    validators = {[VALIDATOR_REQUIRE()]}\r\n    element = \"input\"  \r\n    errorText = \"Please enter a valid address\"\r\n    id = \"address\"\r\n    onInput = {inputHandler}\r\n    ></Input>\r\n    <ImageUpload id = \"image\" \r\n    onInput = {inputHandler}\r\n    errorText = \"Please add a image\"></ImageUpload>\r\n    <Button type = \"submit\" disabled = {!formState.isValid}>ADD Place</Button>\r\n    </form></React.Fragment>\r\n)\r\n\r\n}\r\nexport default NewPlace"],"sourceRoot":""}